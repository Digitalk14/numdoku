{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/akmid/Desktop/projects/numdoku/src/app/utils/gameLogic.ts"],"sourcesContent":["export function generateSecretNumber(): string {\n    const digits = Array.from({ length: 10 }, (_, i) => i.toString());\n    let result = '';\n    \n    // Fisher-Yates shuffle algorithm\n    for (let i = digits.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [digits[i], digits[j]] = [digits[j], digits[i]];\n    }\n    \n    // Take first 4 digits\n    result = digits.slice(0, 4).join('');\n    return result;\n  }\n  \n  export function checkGuess(guess: string, secret: string): { correctNumbers: number, correctPositions: number } {\n    let correctPositions = 0;\n    let correctNumbers = 0;\n    \n    // Check correct positions\n    for (let i = 0; i < 4; i++) {\n      if (guess[i] === secret[i]) {\n        correctPositions++;\n      }\n    }\n    \n    // Check correct numbers\n    const guessDigits = new Set(guess);\n    const secretDigits = new Set(secret);\n    guessDigits.forEach(digit => {\n      if (secretDigits.has(digit)) {\n        correctNumbers++;\n      }\n    });\n    \n    return { correctNumbers, correctPositions };\n  }"],"names":[],"mappings":";;;;AAAO,SAAS;IACZ,MAAM,SAAS,MAAM,IAAI,CAAC;QAAE,QAAQ;IAAG,GAAG,CAAC,GAAG,IAAM,EAAE,QAAQ;IAC9D,IAAI,SAAS;IAEb,iCAAiC;IACjC,IAAK,IAAI,IAAI,OAAO,MAAM,GAAG,GAAG,IAAI,GAAG,IAAK;QAC1C,MAAM,IAAI,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,CAAC,IAAI,CAAC;QAC3C,CAAC,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC,EAAE,CAAC,GAAG;YAAC,MAAM,CAAC,EAAE;YAAE,MAAM,CAAC,EAAE;SAAC;IACjD;IAEA,sBAAsB;IACtB,SAAS,OAAO,KAAK,CAAC,GAAG,GAAG,IAAI,CAAC;IACjC,OAAO;AACT;AAEO,SAAS,WAAW,KAAa,EAAE,MAAc;IACtD,IAAI,mBAAmB;IACvB,IAAI,iBAAiB;IAErB,0BAA0B;IAC1B,IAAK,IAAI,IAAI,GAAG,IAAI,GAAG,IAAK;QAC1B,IAAI,KAAK,CAAC,EAAE,KAAK,MAAM,CAAC,EAAE,EAAE;YAC1B;QACF;IACF;IAEA,wBAAwB;IACxB,MAAM,cAAc,IAAI,IAAI;IAC5B,MAAM,eAAe,IAAI,IAAI;IAC7B,YAAY,OAAO,CAAC,CAAA;QAClB,IAAI,aAAa,GAAG,CAAC,QAAQ;YAC3B;QACF;IACF;IAEA,OAAO;QAAE;QAAgB;IAAiB;AAC5C"}},
    {"offset": {"line": 53, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 59, "column": 0}, "map": {"version":3,"sources":["file:///Users/akmid/Desktop/projects/numdoku/src/app/components/Dialog.tsx"],"sourcesContent":["interface DialogProps {\n  isOpen: boolean;\n  title: string;\n  message: string;\n  onClose: () => void;\n}\n\nexport default function Dialog({ isOpen, title, message, onClose }: DialogProps) {\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center\">\n      <div className=\"bg-white p-6 rounded-lg shadow-lg max-w-sm w-full mx-4\">\n        <h2 className=\"text-xl font-bold mb-4 text-[#333]\">{title}</h2>\n        <p className=\"mb-6 text-[#333]\">{message}</p>\n        <div className=\"flex justify-end\">\n          <button\n            onClick={onClose}\n            className=\"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600 transition-colors\"\n          >\n            Ok, got it!\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n} "],"names":[],"mappings":";;;;;AAOe,SAAS,OAAO,EAAE,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,EAAe;IAC7E,IAAI,CAAC,QAAQ,OAAO;IAEpB,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBAAG,WAAU;8BAAsC;;;;;;8BACpD,6LAAC;oBAAE,WAAU;8BAAoB;;;;;;8BACjC,6LAAC;oBAAI,WAAU;8BACb,cAAA,6LAAC;wBACC,SAAS;wBACT,WAAU;kCACX;;;;;;;;;;;;;;;;;;;;;;AAOX;KAnBwB"}},
    {"offset": {"line": 121, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 127, "column": 0}, "map": {"version":3,"sources":["file:///Users/akmid/Desktop/projects/numdoku/src/app/components/GameBoard.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from \"react\";\nimport { checkGuess } from \"../utils/gameLogic\";\nimport Dialog from \"./Dialog\";\n\ninterface GuessResult {\n  guess: string;\n  correctNumbers: number;\n  correctPositions: number;\n}\n\ninterface GameBoardProps {\n  secretNumber: string;\n  onGameOver: () => void;\n  onWin: () => void;\n}\n\nexport default function GameBoard({\n  secretNumber,\n  onGameOver,\n  onWin,\n}: GameBoardProps) {\n  const [currentGuess, setCurrentGuess] = useState(\"\");\n  const [guesses, setGuesses] = useState<GuessResult[]>([]);\n  const [dialog, setDialog] = useState<{\n    isOpen: boolean;\n    title: string;\n    message: string;\n  }>({\n    isOpen: false,\n    title: \"\",\n    message: \"\",\n  });\n  const maxTries = 8;\n\n  const hasRecurringDigits =\n    currentGuess.length === 4 && new Set(currentGuess).size !== 4;\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n\n    if (currentGuess === secretNumber) {\n      setDialog({\n        isOpen: true,\n        title: \"Congratulations!\",\n        message: \"You won! You guessed the correct number!\",\n      });\n      onWin();\n    } else {\n      const result = checkGuess(currentGuess, secretNumber);\n      const newGuesses = [{ guess: currentGuess, ...result }, ...guesses];\n      setGuesses(newGuesses);\n      setCurrentGuess(\"\");\n\n      if (newGuesses.length >= maxTries) {\n        setDialog({\n          isOpen: true,\n          title: \"Game Over\",\n          message: `You've run out of tries! The correct number was ${secretNumber}.`,\n        });\n        onGameOver();\n      }\n    }\n  };\n\n  const resetGame = () => {\n    setCurrentGuess(\"\");\n    setGuesses([]);\n    setDialog({ isOpen: false, title: \"\", message: \"\" });\n  };\n  console.log(guesses);\n  return (\n    <div className=\"space-y-6\">\n      {!dialog.isOpen && (\n        <>\n          <form onSubmit={handleSubmit}>\n            <div className=\"flex flex-col gap-2\">\n              <div className=\"flex gap-3\">\n                <input\n                  type=\"text\"\n                  value={currentGuess}\n                  onChange={(e) => setCurrentGuess(e.target.value.slice(0, 4))}\n                  className=\"flex-1 p-3 rounded-2xl bg-[#F8FAFF] shadow-[inset_0_2px_4px_rgba(197,206,231,0.25)] text-[#333] text-lg focus:outline-none border border-[#E7ECF3]\"\n                  placeholder=\"Enter 4 unique digits\"\n                  maxLength={4}\n                  minLength={4}\n                />\n                <button\n                  type=\"submit\"\n                  className=\"bg-[#4D77FF] text-white px-6 py-3 rounded-2xl shadow-lg hover:bg-[#3D67FF] transition-all disabled:opacity-50 disabled:cursor-not-allowed\"\n                  disabled={\n                    currentGuess.length !== 4 ||\n                    !/^\\d+$/.test(currentGuess) ||\n                    hasRecurringDigits\n                  }\n                >\n                  Try\n                </button>\n              </div>\n              {hasRecurringDigits && (\n                <div className=\"text-red-500\">Please use unique digits</div>\n              )}\n            </div>\n          </form>\n          <div className=\"mt-4 text-[#333]\">\n            Remaining tries: {maxTries - guesses.length}\n          </div>\n          <div className=\"space-y-2\">\n            <div className=\"grid grid-cols-3 gap-4 font-bold mb-2 text-[#333]\">\n              <div>Guess</div>\n              <div>Correct #</div>\n              <div>Position</div>\n            </div>\n            {guesses.reverse().map((guess, index) => (\n              <div key={index} className=\"grid grid-cols-3 gap-4 py-2\">\n                <div>{guess.guess}</div>\n                <div>{guess.correctNumbers}</div>\n                <div>{guess.correctPositions}</div>\n              </div>\n            ))}\n          </div>\n        </>\n      )}\n\n      <Dialog\n        isOpen={dialog.isOpen}\n        title={dialog.title}\n        message={dialog.message}\n        onClose={() => {\n          setDialog({ ...dialog, isOpen: false });\n          resetGame();\n        }}\n      />\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;;;AAJA;;;;AAkBe,SAAS,UAAU,EAChC,YAAY,EACZ,UAAU,EACV,KAAK,EACU;;IACf,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACjD,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB,EAAE;IACxD,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAIhC;QACD,QAAQ;QACR,OAAO;QACP,SAAS;IACX;IACA,MAAM,WAAW;IAEjB,MAAM,qBACJ,aAAa,MAAM,KAAK,KAAK,IAAI,IAAI,cAAc,IAAI,KAAK;IAE9D,MAAM,eAAe,CAAC;QACpB,EAAE,cAAc;QAEhB,IAAI,iBAAiB,cAAc;YACjC,UAAU;gBACR,QAAQ;gBACR,OAAO;gBACP,SAAS;YACX;YACA;QACF,OAAO;YACL,MAAM,SAAS,CAAA,GAAA,mIAAA,CAAA,aAAU,AAAD,EAAE,cAAc;YACxC,MAAM,aAAa;gBAAC;oBAAE,OAAO;oBAAc,GAAG,MAAM;gBAAC;mBAAM;aAAQ;YACnE,WAAW;YACX,gBAAgB;YAEhB,IAAI,WAAW,MAAM,IAAI,UAAU;gBACjC,UAAU;oBACR,QAAQ;oBACR,OAAO;oBACP,SAAS,CAAC,gDAAgD,EAAE,aAAa,CAAC,CAAC;gBAC7E;gBACA;YACF;QACF;IACF;IAEA,MAAM,YAAY;QAChB,gBAAgB;QAChB,WAAW,EAAE;QACb,UAAU;YAAE,QAAQ;YAAO,OAAO;YAAI,SAAS;QAAG;IACpD;IACA,QAAQ,GAAG,CAAC;IACZ,qBACE,6LAAC;QAAI,WAAU;;YACZ,CAAC,OAAO,MAAM,kBACb;;kCACE,6LAAC;wBAAK,UAAU;kCACd,cAAA,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;4CACC,MAAK;4CACL,OAAO;4CACP,UAAU,CAAC,IAAM,gBAAgB,EAAE,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG;4CACzD,WAAU;4CACV,aAAY;4CACZ,WAAW;4CACX,WAAW;;;;;;sDAEb,6LAAC;4CACC,MAAK;4CACL,WAAU;4CACV,UACE,aAAa,MAAM,KAAK,KACxB,CAAC,QAAQ,IAAI,CAAC,iBACd;sDAEH;;;;;;;;;;;;gCAIF,oCACC,6LAAC;oCAAI,WAAU;8CAAe;;;;;;;;;;;;;;;;;kCAIpC,6LAAC;wBAAI,WAAU;;4BAAmB;4BACd,WAAW,QAAQ,MAAM;;;;;;;kCAE7C,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;kDAAI;;;;;;kDACL,6LAAC;kDAAI;;;;;;kDACL,6LAAC;kDAAI;;;;;;;;;;;;4BAEN,QAAQ,OAAO,GAAG,GAAG,CAAC,CAAC,OAAO,sBAC7B,6LAAC;oCAAgB,WAAU;;sDACzB,6LAAC;sDAAK,MAAM,KAAK;;;;;;sDACjB,6LAAC;sDAAK,MAAM,cAAc;;;;;;sDAC1B,6LAAC;sDAAK,MAAM,gBAAgB;;;;;;;mCAHpB;;;;;;;;;;;;;0BAUlB,6LAAC,sIAAA,CAAA,UAAM;gBACL,QAAQ,OAAO,MAAM;gBACrB,OAAO,OAAO,KAAK;gBACnB,SAAS,OAAO,OAAO;gBACvB,SAAS;oBACP,UAAU;wBAAE,GAAG,MAAM;wBAAE,QAAQ;oBAAM;oBACrC;gBACF;;;;;;;;;;;;AAIR;GAtHwB;KAAA"}},
    {"offset": {"line": 364, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 380, "column": 0}, "map": {"version":3,"sources":["file:///Users/akmid/Desktop/projects/numdoku/src/app/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport GameBoard from './components/GameBoard';\nimport { generateSecretNumber } from './utils/gameLogic';\nimport { raleway } from './layout';\n\nexport default function Home() {\n  const [secretNumber, setSecretNumber] = useState('');\n  const [gameOver, setGameOver] = useState(false);\n  const [won, setWon] = useState(false);\n\n  useEffect(() => {\n    setSecretNumber(generateSecretNumber());\n  }, []);\n\n  const startNewGame = () => {\n    setSecretNumber(generateSecretNumber());\n    setGameOver(false);\n    setWon(false);\n  };\n\n  return (\n    <main className=\"min-h-screen bg-[#F8FAFF] p-6\">\n      {/* Main Content */}\n      <div className=\"max-w-md mx-auto\">\n        <h1 className={`text-[#1E2B4F] text-3xl mb-8 ${raleway.className}`}>\n          NumDoku\n        </h1>\n\n        {/* Game Container */}\n        <div className=\"bg-white rounded-3xl shadow-[0_4px_20px_rgba(197,206,231,0.25)] p-6\">\n          <GameBoard \n            secretNumber={secretNumber}\n            onGameOver={() => setGameOver(true)}\n            onWin={() => setWon(true)}\n          />\n          \n          {(gameOver || won) && (\n            <div className=\"mt-6 text-center\">\n              <p className=\"text-xl mb-4 text-[#1E2B4F]\">\n                {won ? 'Congratulations! You won! 🎉' : 'Game Over!'}\n                {gameOver && !won && <div>The number was {secretNumber}</div>}\n              </p>\n              <button\n                onClick={startNewGame}\n                className=\"bg-[#1E2B4F] text-white px-6 py-3 rounded-2xl shadow-lg hover:bg-[#2a3b6a] transition-all\"\n              >\n                Play Again\n              </button>\n            </div>\n          )}\n        </div>\n      </div>\n    </main>\n  );\n}"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AAAA;;;AALA;;;;;AAOe,SAAS;;IACtB,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACjD,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,KAAK,OAAO,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAE/B,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;0BAAE;YACR,gBAAgB,CAAA,GAAA,mIAAA,CAAA,uBAAoB,AAAD;QACrC;yBAAG,EAAE;IAEL,MAAM,eAAe;QACnB,gBAAgB,CAAA,GAAA,mIAAA,CAAA,uBAAoB,AAAD;QACnC,YAAY;QACZ,OAAO;IACT;IAEA,qBACE,6LAAC;QAAK,WAAU;kBAEd,cAAA,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBAAG,WAAW,CAAC,6BAA6B,EAAE,oLAAA,CAAA,UAAO,CAAC,SAAS,EAAE;8BAAE;;;;;;8BAKpE,6LAAC;oBAAI,WAAU;;sCACb,6LAAC,yIAAA,CAAA,UAAS;4BACR,cAAc;4BACd,YAAY,IAAM,YAAY;4BAC9B,OAAO,IAAM,OAAO;;;;;;wBAGrB,CAAC,YAAY,GAAG,mBACf,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCAAE,WAAU;;wCACV,MAAM,iCAAiC;wCACvC,YAAY,CAAC,qBAAO,6LAAC;;gDAAI;gDAAgB;;;;;;;;;;;;;8CAE5C,6LAAC;oCACC,SAAS;oCACT,WAAU;8CACX;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AASf;GAjDwB;KAAA"}},
    {"offset": {"line": 499, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}